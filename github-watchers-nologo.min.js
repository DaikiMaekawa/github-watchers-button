(function(a,b){a.gitwatch={text:"% watchers",styles:['.gitwatch { background: #fafafa; background-color: #fbfbfb; background-image: -webkit-gradient(linear, 0 0, 0 100%, from(#fbfbfb), to(#cccccc)); background-image: -webkit-linear-gradient(#fbfbfb, #cccccc); background-image: -moz-linear-gradient(#fbfbfb, #cccccc); background-image: -ms-linear-gradient(#fbfbfb, #cccccc); background-image: -o-linear-gradient(#fbfbfb, #cccccc); background-image: linear-gradient(#fbfbfb, #cccccc); font: 11px "Lucida Grande", Verdana, sans-serif; outline: 0; -webkit-box-shadow: 0 1px 3px rgba(0, 0, 0, 0.6); -moz-box-shadow: 0 1px 3px rgba(0, 0, 0, 0.6); box-shadow: 0 1px 3px rgba(0, 0, 0, 0.6); font-weight: bold; line-height: 1; cursor: pointer; position: relative; text-decoration: none; width: auto; border-bottom-color: rgba(0, 0, 0, 0.3); -webkit-border-radius: 15px; -moz-border-radius: 15px; border-radius:15px; padding: 4px 14px 6px; color: #4183C4; text-shadow: 0 1px 0 #fff; }',".gitwatch:active { top: 1px; }",".gitwatch:hover { background: #eee; text-decoration: none; }",".gitwatch img { vertical-align: middle; padding-right: 5px; border: 0; }",".gitwatch.vertical { padding: 10px 15px 8px; font-size:30px; letter-spacing:-2px; bottom:5px; }",".gitwatch.small { padding: 2px 14px 4px; }"],className:"gitwatch",injectScript:function(a){var c=b.createElement("script");c.src=a,b.body.appendChild(c)},applyCss:function(a){var c=b.createElement("style");c.type="text/css";try{c.appendChild(b.createTextNode(a))}catch(d){c.styleSheet&&(c.styleSheet.cssText=a)}b.body.appendChild(c)},getByClass:function(){if(b.getElementsByClassName)return b.getElementsByClassName("gitwatch");var a=b.getElementsByTagName("a"),c=[];for(var d=0,e=a.length;d<e;d++)(" "+this+" ").indexOf(" "+a[d].className+" ")>-1&&c.push(a[d]);return c},run:function(){this.elements=this.getByClass(this.className);if(this.elements&&this.elements.length===0)return!1;var a=this.elements[0].href.match(/com\/([^\s\/]+)\/([^\s\/]+)/);if(!a||!a[1])return!1;this.username=a[1],this.reponame=a[2],this.injectScript("http://github.com/api/v2/json/repos/show/"+encodeURIComponent(this.username)+"/"+encodeURIComponent(this.reponame)+"?callback="+encodeURIComponent("gitwatch.callback"))},callback:function(a){a&&a.repository&&this.apply(a.repository.watchers)},apply:function(a){this.applyCss(this.styles.join(""));var b="";for(var c=0,d=this.elements.length;c<d;c++)currentEl=this.elements[c],currentClass=currentEl.className,currentClass.indexOf("small")>0||currentClass.indexOf("vertical")>0?b=a:b=this.text.replace(/%/,a),currentEl.innerHTML=b}},run=function(){a.gitwatch.run()},b.addEventListener?b.addEventListener("DOMContentLoaded",run,!1):a.attachEvent&&a.attachEvent("onload",run)})(window,document)